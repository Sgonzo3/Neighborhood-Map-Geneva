{"version":3,"sources":["POI.js","Panel.js","Map.js","App.js","serviceWorker.js","index.js"],"names":["POI","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","react_default","a","createElement","className","tabIndex","name","category","onClick","e","setChosenPoint","target","value","id","React","Component","Panel","wikiCall","fetch","then","resp","json","data","setState","info","query","pages","extract","catch","alert","console","log","filter","onChange","setFilteredList","filteredList","map","poi","index","POI_POI","key","place_id","Map","initMap","window","google","maps","document","getElementById","center","lat","lng","zoom","fullscreenControl","streetViewControl","zoomControl","mapTypeControl","forEach","request","placeId","fields","places","PlacesService","getDetails","place","status","PlacesServiceStatus","OK","marker","Marker","position","geometry","location","title","animation","Animation","DROP","windowContent","concat","photos","getUrl","maxHeight","maxWidth","formatted_address","rating","addEventListener","setAnimation","event","addListener","BOUNCE","innerHTML","scrollIntoView","behavior","chosenPoint","setCenter","getPosition","mapLoaded","script","src","async","defer","appendChild","prevProps","role","App","selectedCategory","newList","list","Panel_Panel","Map_Map","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","App_App","URL","process","origin","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.27f649ed.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\n\nexport default class POI extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t}\n\trender() {\n\t\treturn(\n\t\t\t<li className=\"poi\" tabIndex=\"0\">\n\t\t\t\t<h3>{this.props.name}</h3>\n\t\t\t\t<p>{this.props.category}</p>\n\t\t\t\t{/* on click button will change App state to the selected location as chosenPoint */}\n\t\t\t\t<button onClick={(e) => this.props.setChosenPoint(e.target.value)} value={this.props.id}>Select</button>\n\t\t\t</li>\n\t\t);\n\t}\n}\n","import React from 'react'\nimport './App.css'\nimport POI from './POI.js'\n\nexport default class Panel extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinfo:\"\"\n\t\t}\n\t}\n\t//fetch first paragraph of the Wikipedia article on Geneva, Switzerland through WikiMedia API\n\twikiCall = () => {\n\t\tfetch(\n\t\t\t\"https://en.wikipedia.org/w/api.php?format=json&origin=*&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=Geneva\"\n\t\t).then(resp => {\n\t\t\treturn resp.json();\n\t\t}).then(data => {\n\t\t\tthis.setState({info: data.query.pages[12521].extract,});\n\t\t}).catch(resp => {\n\t\t\talert(\"Failed to get info from WikiMedia API. More details in Developer Console.\");\n\t\t\tconsole.log(\"Failed to get info from WikiMedia API: \" + resp);\n\t\t});\n\t}\n\tcomponentDidMount() {\n\t\tthis.wikiCall();\n\t}\n\trender() {\n\t\treturn(\n\t\t\t<section id=\"panel\">\n\t\t\t\t<h1 id=\"page-title\">Neighborhood Map:</h1>\n\t\t\t\t<article id=\"info-window\" tabIndex=\"0\">\n\t\t\t\t\t<h2>Geneva</h2>\n\t\t\t\t\t<p>{this.state.info}</p>\n\t\t\t\t</article>\n\t\t\t\t<div className=\"filter-options\">\n\t\t\t\t\t<h2>Filter Options:</h2>\n\t\t\t\t\t<select value={this.props.filter} name=\"filter-selection\" id=\"\" onChange={this.props.setFilteredList}>\n\t\t\t\t\t\t<option value=\"All\">All</option>\n\t\t\t\t\t\t<option value=\"Food\">Food</option>\n\t\t\t\t\t\t<option value=\"Drinks\">Drinks</option>\n\t\t\t\t\t\t<option value=\"Coffee\">Coffee</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<ul id=\"all-poi\">\n\t\t\t\t{\n\t\t\t\t\t// maps through filteredList rendering a POI component for each item\n\t\t\t\t\tthis.props.filteredList.map((poi, index) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<POI\n\t\t\t\t\t\t\tkey={poi.place_id}\n\t\t\t\t\t\t\tid={poi.place_id}\n\t\t\t\t\t\t\tname={poi.name}\n\t\t\t\t\t\t\tcategory={poi.category}\n\t\t\t\t\t\t\tsetChosenPoint={this.props.setChosenPoint}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t);\n\t}\n}\n","import React from 'react'\nimport './App.css'\n\nexport default class Map extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmapLoaded: false,\n\t\t}\n\t}\n\t// initializes the map\n\tinitMap  = () =>  {\n\t\tthis.map = new window.google.maps.Map(\n\t\t\tdocument.getElementById('map'), {\n\t\t\t\tcenter:{lat:46.205531, lng:6.14519574},\n\t\t\t\tzoom: 15,\n\t\t\t\tfullscreenControl: false,\n\t\t\t\tstreetViewControl: false,\n\t\t\t\tzoomControl: true,\n\t\t\t\tmapTypeControl:false,\n\t\t\t}\n\t\t);\n\t\t// each item in filteredList is displayed on the map with information from Google Maps API\n\t\tthis.props.filteredList.forEach((poi) => {\n\t\t\tlet request = {\n\t\t\t\tplaceId: poi.place_id,\n\t\t\t\tfields: ['name', 'place_id','geometry','formatted_address', 'photos', 'rating']\n\t\t\t}\n\t\t\tlet service = new window.google.maps.places.PlacesService(this.map);\n\n\t\t\t// requests info from Google Maps API\n\t\t\tservice.getDetails(request, (place, status) => {\n\t\t\t\tif(status === window.google.maps.places.PlacesServiceStatus.OK) {\n\t\t\t\t\t//creates markers for locations\n\t\t\t\t\tlet marker = new window.google.maps.Marker({\n\t\t\t\t\t\tmap: this.map,\n\t\t\t\t\t\tposition: place.geometry.location,\n\t\t\t\t\t\ttitle: place.place_id,\n\t\t\t\t\t\tanimation: window.google.maps.Animation.DROP,\n\t\t\t\t\t});\n\t\t\t\t\t// sets content for window with info from Maps API\n\t\t\t\t\tlet windowContent =\n\t\t\t\t\t\t`<div class=\"infoWindow\">\n\t\t\t\t\t\t\t<h2>${place.name}</h2>\n\t\t\t\t\t\t\t<img src=\"${place.photos[0].getUrl({maxHeight:300, maxWidth: 600})}\" alt=\"Preview photo of ${place.name}\">\n\t\t\t\t\t\t\t<p>${place.formatted_address}</p>\n\t\t\t\t\t\t\t<p>Rating: ${place.rating}</p>\n\t\t\t\t\t\t</div>`\n\t\t\t\t\t// creates event listener to remove animation after user interacts with map\n\t\t\t\t\twindow.addEventListener('click', () => {\n\t\t\t\t\t\tmarker.setAnimation(null);\n\t\t\t\t\t});\n\t\t\t\t\t// sets chosen marker to BOUNCE once, displays windowContent in info-window, scrolls page to display altered info-window\n\t\t\t\t\twindow.google.maps.event.addListener(marker, 'click', () => {\n\t\t\t\t\t\tmarker.setAnimation(window.google.maps.Animation.BOUNCE);\n\t\t\t\t\t\tdocument.getElementById(\"info-window\").innerHTML = windowContent;\n\t\t\t\t\t\tdocument.getElementById('info-window').scrollIntoView({behavior: 'smooth'});\n\t\t\t\t\t});\n\t\t\t\t\t// sets chosen marker to BOUNCE until next interraction, displays windowContent in info-window, scrolls page to display altered info-window\n\t\t\t\t\tif(marker.title === this.props.chosenPoint) {\n\t\t\t\t\t\tmarker.setAnimation(window.google.maps.Animation.BOUNCE);\n\t\t\t\t\t\tthis.map.setCenter(marker.getPosition());\n\t\t\t\t\t\tdocument.getElementById(\"info-window\").innerHTML = windowContent;\n\t\t\t\t\t\tdocument.getElementById('info-window').scrollIntoView({behavior: 'smooth'});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Failed to get some details from Maps API. More details in Developer Console.\");\n\t\t\t\t\tconsole.log(\"Failed to get some details from Maps API: \" + status);\n\t\t\t\t}\n\t\t\t\t});\n\t\t});\n\t}\n\tcomponentDidMount() {\n\t\t// creates async script for Maps API, sets state when loaded\n\t\tlet script = window.document.createElement('script');\n\t\tscript.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBYbXqsVnGy_kqg6cxgsXOE_SsbfMfjH4c&libraries=places\";\n\t\tscript.async = true;\n\t\tscript.defer = true;\n\t\tscript.addEventListener('error', () => alert(\"Failed to load Google Maps API\") );\n\t\tscript.addEventListener('load', () => this.setState({mapLoaded: true}) );\n\t\tdocument.getElementById('map').appendChild(script);\n\t}\n\tcomponentDidUpdate(prevProps) {\n\t\t// initializes map when script is loaded\n\t\tif(this.state.mapLoaded){\n\t\t\tthis.initMap();\n\t\t}\n\t}\n\trender() {\n\t\treturn(\n\t\t\t<aside id=\"map-container\" role=\"application\">\n\t\t\t\t<div id=\"map\"></div>\n\t\t\t</aside>\n\t\t);\n\t}\n}\n","import React from 'react'\nimport './App.css'\nimport Panel from './Panel.js'\nimport Map from './Map.js'\n\nexport default class App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlist: [\n\t\t\t\t{\n\t\t\t\t\tname : \"Restaurant Scandale\",\n\t\t\t\t\tcategory: \"Food\",\n\t\t\t\t\tplace_id: \"ChIJoXdYzSBljEcRJDkbQcXqd6g\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname : \"Bleu Nuit\",\n\t\t\t\t\tcategory: \"Food\",\n\t\t\t\t\tplace_id: \"ChIJLZfQndVkjEcR5ENGI9hnRpU\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname : \"Brasserie Lipp Genève\",\n\t\t\t\t\tcategory: \"Food\",\n\t\t\t\t\tplace_id: \"ChIJpSAtailljEcRV-WskLeIpv4\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname : \"Jardin des Crêpes\",\n\t\t\t\t\tcategory: \"Food\",\n\t\t\t\t\tplace_id: \"ChIJdaI_adV6jEcRESqp73UfzDU\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname : \"Lady Godiva Pub\",\n\t\t\t\t\tcategory: \"Drinks\",\n\t\t\t\t\tplace_id: \"ChIJ-cF6uNV6jEcRgIPGF2x5mj0\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname : \"Le Kraken Bar\",\n\t\t\t\t\tcategory: \"Drinks\",\n\t\t\t\t\tplace_id: \"ChIJt9uRtyp7jEcR0aBs1BbJ3oc\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname : \"Café du Lys\",\n\t\t\t\t\tcategory: \"Coffee\",\n\t\t\t\t\tplace_id: \"ChIJh0usxip7jEcR7fg49V4HK88\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname : \"ROYAL Karoma Cafe\",\n\t\t\t\t\tcategory: \"Coffee\",\n\t\t\t\t\tplace_id: \"ChIJl39vjNZkjEcRV8faI8rCHVg\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname : \"Bagel House Café\",\n\t\t\t\t\tcategory: \"Coffee\",\n\t\t\t\t\tplace_id: \"ChIJQ94ASilljEcRqeC-tTpuEPk\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname : \"Les Recyclables\",\n\t\t\t\t\tcategory: \"Coffee\",\n\t\t\t\t\tplace_id: \"ChIJZROpBtR6jEcRlLjgOxOpXbA\",\n\t\t\t\t},\n\t\t\t],\n\t\t\tfilteredList: [],\n\t\t\tfilter: \"All\",\n\t\t\tchosenPoint: \"\",\n\t\t}\n\t}\n\t// Will clear info-window, filter the default list by selected filter, then set state to new filteredList, filter, and cleared chosenPoint\n\tsetFilteredList = (selectedCategory) => {\n\t\tdocument.getElementById('info-window').innerHTML = ``;\n\t\tlet newList = selectedCategory.target.value === \"All\" ? this.state.list : this.state.list.filter((poi) => {\n\t\t\treturn poi.category === selectedCategory.target.value\n\t\t});\n\t\tthis.setState({\n\t\t\tfilteredList: newList,\n\t\t\tfilter: selectedCategory.target.value,\n\t\t\tchosenPoint: \"\",\n\t\t});\n\t}\n\tsetChosenPoint = (chosenPoint) => {\n\t\tthis.setState({\n\t\t\tchosenPoint: chosenPoint,\n\t\t});\n\t}\n\tcomponentDidMount() {\n\t\tif(this.state.filter === \"All\") {\n\t\t\tthis.setState({filteredList:this.state.list});\n\t\t}\n\t}\n\trender() {\n    \treturn(\n\t      <main>\n\t\t\t    <Panel\n\t\t\t\t\tfilteredList={this.state.filteredList}\n\t\t\t\t\tsetFilteredList={this.setFilteredList}\n\t\t\t\t\tfilter={this.state.filter}\n\t\t\t\t\tsetChosenPoint={this.setChosenPoint}\n\t\t\t\t\t/>\n\t\t\t\t\t<Map\n\t\t\t\t\tfilteredList={this.state.filteredList}\n\t\t\t\t\tchosenPoint={this.state.chosenPoint}\n\t\t\t\t\t/>\n\t  \t\t</main>\n        )\n    }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}